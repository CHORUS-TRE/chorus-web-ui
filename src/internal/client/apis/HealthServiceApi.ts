/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import type { RpcStatus } from '../models/index'
import { RpcStatusFromJSON, RpcStatusToJSON } from '../models/index'

/**
 *
 */
export class HealthServiceApi extends runtime.BaseAPI {
  /**
   * This endpoint returns health check
   * Get health check
   */
  async healthServiceGetHealthCheckRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<object>> {
    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/api/rest/v1/health`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse<any>(response)
  }

  /**
   * This endpoint returns health check
   * Get health check
   */
  async healthServiceGetHealthCheck(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<object> {
    const response = await this.healthServiceGetHealthCheckRaw(initOverrides)
    return await response.value()
  }

  /**
   * This endpoint returns health check
   * Get health check
   */
  async healthServiceGetHealthCheck2Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<object>> {
    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/api/rest/v1/health`,
        method: 'HEAD',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse<any>(response)
  }

  /**
   * This endpoint returns health check
   * Get health check
   */
  async healthServiceGetHealthCheck2(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<object> {
    const response = await this.healthServiceGetHealthCheck2Raw(initOverrides)
    return await response.value()
  }
}
