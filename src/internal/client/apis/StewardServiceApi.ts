/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import type { ChorusInitializeTenantRequest, RpcStatus } from '../models/index'
import {
  ChorusInitializeTenantRequestFromJSON,
  ChorusInitializeTenantRequestToJSON,
  RpcStatusFromJSON,
  RpcStatusToJSON
} from '../models/index'

export interface StewardServiceInitializeTenantRequest {
  body: ChorusInitializeTenantRequest
}

/**
 *
 */
export class StewardServiceApi extends runtime.BaseAPI {
  /**
   * This endpoint initializes a new tenant
   * Initialize a tenant
   */
  async stewardServiceInitializeTenantRaw(
    requestParameters: StewardServiceInitializeTenantRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<object>> {
    if (
      requestParameters.body === null ||
      requestParameters.body === undefined
    ) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling stewardServiceInitializeTenant.'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    if (this.configuration && this.configuration.apiKey) {
      headerParameters['Authorization'] =
        this.configuration.apiKey('Authorization') // bearer authentication
    }

    const response = await this.request(
      {
        path: `/api/rest/v1/steward/tenants/initialize`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: ChorusInitializeTenantRequestToJSON(requestParameters.body)
      },
      initOverrides
    )

    return new runtime.JSONApiResponse<any>(response)
  }

  /**
   * This endpoint initializes a new tenant
   * Initialize a tenant
   */
  async stewardServiceInitializeTenant(
    requestParameters: StewardServiceInitializeTenantRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<object> {
    const response = await this.stewardServiceInitializeTenantRaw(
      requestParameters,
      initOverrides
    )
    return await response.value()
  }
}
