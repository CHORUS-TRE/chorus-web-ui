/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ChorusWorkspaceFile
 */
export interface ChorusWorkspaceFile {
  /**
   *
   * @type {string}
   * @memberof ChorusWorkspaceFile
   */
  name?: string
  /**
   *
   * @type {string}
   * @memberof ChorusWorkspaceFile
   */
  path?: string
  /**
   *
   * @type {boolean}
   * @memberof ChorusWorkspaceFile
   */
  isDirectory?: boolean
  /**
   *
   * @type {string}
   * @memberof ChorusWorkspaceFile
   */
  size?: string
  /**
   *
   * @type {string}
   * @memberof ChorusWorkspaceFile
   */
  mimeType?: string
  /**
   *
   * @type {Date}
   * @memberof ChorusWorkspaceFile
   */
  createdAt?: Date
  /**
   *
   * @type {Date}
   * @memberof ChorusWorkspaceFile
   */
  updatedAt?: Date
  /**
   *
   * @type {string}
   * @memberof ChorusWorkspaceFile
   */
  content?: string
}

/**
 * Check if a given object implements the ChorusWorkspaceFile interface.
 */
export function instanceOfChorusWorkspaceFile(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusWorkspaceFileFromJSON(json: any): ChorusWorkspaceFile {
  return ChorusWorkspaceFileFromJSONTyped(json, false)
}

export function ChorusWorkspaceFileFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusWorkspaceFile {
  if (json === undefined || json === null) {
    return json
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    path: !exists(json, 'path') ? undefined : json['path'],
    isDirectory: !exists(json, 'isDirectory') ? undefined : json['isDirectory'],
    size: !exists(json, 'size') ? undefined : json['size'],
    mimeType: !exists(json, 'mimeType') ? undefined : json['mimeType'],
    createdAt: !exists(json, 'createdAt')
      ? undefined
      : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt')
      ? undefined
      : new Date(json['updatedAt']),
    content: !exists(json, 'content') ? undefined : json['content']
  }
}

export function ChorusWorkspaceFileToJSON(
  value?: ChorusWorkspaceFile | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    name: value.name,
    path: value.path,
    isDirectory: value.isDirectory,
    size: value.size,
    mimeType: value.mimeType,
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt:
      value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
    content: value.content
  }
}
