/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ChorusSort } from './ChorusSort'
import {
  ChorusSortFromJSON,
  ChorusSortFromJSONTyped,
  ChorusSortToJSON
} from './ChorusSort'

/**
 *
 * @export
 * @interface ChorusPaginationResult
 */
export interface ChorusPaginationResult {
  /**
   * Total number of results
   * @type {number}
   * @memberof ChorusPaginationResult
   */
  total?: number
  /**
   * Offset used for pagination
   * @type {number}
   * @memberof ChorusPaginationResult
   */
  offset?: number
  /**
   * Limit used for pagination
   * @type {number}
   * @memberof ChorusPaginationResult
   */
  limit?: number
  /**
   *
   * @type {ChorusSort}
   * @memberof ChorusPaginationResult
   */
  sort?: ChorusSort
}

/**
 * Check if a given object implements the ChorusPaginationResult interface.
 */
export function instanceOfChorusPaginationResult(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusPaginationResultFromJSON(
  json: any
): ChorusPaginationResult {
  return ChorusPaginationResultFromJSONTyped(json, false)
}

export function ChorusPaginationResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusPaginationResult {
  if (json === undefined || json === null) {
    return json
  }
  return {
    total: !exists(json, 'total') ? undefined : json['total'],
    offset: !exists(json, 'offset') ? undefined : json['offset'],
    limit: !exists(json, 'limit') ? undefined : json['limit'],
    sort: !exists(json, 'sort') ? undefined : ChorusSortFromJSON(json['sort'])
  }
}

export function ChorusPaginationResultToJSON(
  value?: ChorusPaginationResult | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    total: value.total,
    offset: value.offset,
    limit: value.limit,
    sort: ChorusSortToJSON(value.sort)
  }
}
