/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ChorusInternal } from './ChorusInternal'
import {
  ChorusInternalFromJSON,
  ChorusInternalFromJSONTyped,
  ChorusInternalToJSON
} from './ChorusInternal'
import type { ChorusOpenID } from './ChorusOpenID'
import {
  ChorusOpenIDFromJSON,
  ChorusOpenIDFromJSONTyped,
  ChorusOpenIDToJSON
} from './ChorusOpenID'

/**
 *
 * @export
 * @interface ChorusAuthenticationMode
 */
export interface ChorusAuthenticationMode {
  /**
   *
   * @type {string}
   * @memberof ChorusAuthenticationMode
   */
  type?: string
  /**
   *
   * @type {ChorusInternal}
   * @memberof ChorusAuthenticationMode
   */
  internal?: ChorusInternal
  /**
   *
   * @type {ChorusOpenID}
   * @memberof ChorusAuthenticationMode
   */
  openid?: ChorusOpenID
}

/**
 * Check if a given object implements the ChorusAuthenticationMode interface.
 */
export function instanceOfChorusAuthenticationMode(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusAuthenticationModeFromJSON(
  json: any
): ChorusAuthenticationMode {
  return ChorusAuthenticationModeFromJSONTyped(json, false)
}

export function ChorusAuthenticationModeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusAuthenticationMode {
  if (json === undefined || json === null) {
    return json
  }
  return {
    type: !exists(json, 'type') ? undefined : json['type'],
    internal: !exists(json, 'internal')
      ? undefined
      : ChorusInternalFromJSON(json['internal']),
    openid: !exists(json, 'openid')
      ? undefined
      : ChorusOpenIDFromJSON(json['openid'])
  }
}

export function ChorusAuthenticationModeToJSON(
  value?: ChorusAuthenticationMode | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    type: value.type,
    internal: ChorusInternalToJSON(value.internal),
    openid: ChorusOpenIDToJSON(value.openid)
  }
}
