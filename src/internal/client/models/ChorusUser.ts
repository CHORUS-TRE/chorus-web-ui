/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ChorusRole } from './ChorusRole'
import {
  ChorusRoleFromJSON,
  ChorusRoleFromJSONTyped,
  ChorusRoleToJSON
} from './ChorusRole'

/**
 *
 * @export
 * @interface ChorusUser
 */
export interface ChorusUser {
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  firstName?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  lastName?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  username?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  source?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  password?: string
  /**
   *
   * @type {string}
   * @memberof ChorusUser
   */
  status?: string
  /**
   *
   * @type {Array<ChorusRole>}
   * @memberof ChorusUser
   */
  roles?: Array<ChorusRole>
  /**
   *
   * @type {boolean}
   * @memberof ChorusUser
   */
  totpEnabled?: boolean
  /**
   *
   * @type {boolean}
   * @memberof ChorusUser
   */
  passwordChanged?: boolean
  /**
   *
   * @type {Date}
   * @memberof ChorusUser
   */
  createdAt?: Date
  /**
   *
   * @type {Date}
   * @memberof ChorusUser
   */
  updatedAt?: Date
}

/**
 * Check if a given object implements the ChorusUser interface.
 */
export function instanceOfChorusUser(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusUserFromJSON(json: any): ChorusUser {
  return ChorusUserFromJSONTyped(json, false)
}

export function ChorusUserFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusUser {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    firstName: !exists(json, 'firstName') ? undefined : json['firstName'],
    lastName: !exists(json, 'lastName') ? undefined : json['lastName'],
    username: !exists(json, 'username') ? undefined : json['username'],
    source: !exists(json, 'source') ? undefined : json['source'],
    password: !exists(json, 'password') ? undefined : json['password'],
    status: !exists(json, 'status') ? undefined : json['status'],
    roles: !exists(json, 'roles')
      ? undefined
      : (json['roles'] as Array<any>).map(ChorusRoleFromJSON),
    totpEnabled: !exists(json, 'totpEnabled') ? undefined : json['totpEnabled'],
    passwordChanged: !exists(json, 'passwordChanged')
      ? undefined
      : json['passwordChanged'],
    createdAt: !exists(json, 'createdAt')
      ? undefined
      : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt')
      ? undefined
      : new Date(json['updatedAt'])
  }
}

export function ChorusUserToJSON(value?: ChorusUser | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    firstName: value.firstName,
    lastName: value.lastName,
    username: value.username,
    source: value.source,
    password: value.password,
    status: value.status,
    roles:
      value.roles === undefined
        ? undefined
        : (value.roles as Array<any>).map(ChorusRoleToJSON),
    totpEnabled: value.totpEnabled,
    passwordChanged: value.passwordChanged,
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt:
      value.updatedAt === undefined ? undefined : value.updatedAt.toISOString()
  }
}
