/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ChorusApp
 */
export interface ChorusApp {
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  tenantId?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  userId?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  name?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  description?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  status?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  dockerImageRegistry?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  dockerImageName?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  dockerImageTag?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  shmSize?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  kioskConfigURL?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  maxCPU?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  minCPU?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  maxMemory?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  minMemory?: string
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  iconURL?: string
  /**
   *
   * @type {Date}
   * @memberof ChorusApp
   */
  createdAt?: Date
  /**
   *
   * @type {Date}
   * @memberof ChorusApp
   */
  updatedAt?: Date
  /**
   *
   * @type {string}
   * @memberof ChorusApp
   */
  prettyName?: string
}

/**
 * Check if a given object implements the ChorusApp interface.
 */
export function instanceOfChorusApp(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusAppFromJSON(json: any): ChorusApp {
  return ChorusAppFromJSONTyped(json, false)
}

export function ChorusAppFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusApp {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    tenantId: !exists(json, 'tenantId') ? undefined : json['tenantId'],
    userId: !exists(json, 'userId') ? undefined : json['userId'],
    name: !exists(json, 'name') ? undefined : json['name'],
    description: !exists(json, 'description') ? undefined : json['description'],
    status: !exists(json, 'status') ? undefined : json['status'],
    dockerImageRegistry: !exists(json, 'dockerImageRegistry')
      ? undefined
      : json['dockerImageRegistry'],
    dockerImageName: !exists(json, 'dockerImageName')
      ? undefined
      : json['dockerImageName'],
    dockerImageTag: !exists(json, 'dockerImageTag')
      ? undefined
      : json['dockerImageTag'],
    shmSize: !exists(json, 'shmSize') ? undefined : json['shmSize'],
    kioskConfigURL: !exists(json, 'kioskConfigURL')
      ? undefined
      : json['kioskConfigURL'],
    maxCPU: !exists(json, 'maxCPU') ? undefined : json['maxCPU'],
    minCPU: !exists(json, 'minCPU') ? undefined : json['minCPU'],
    maxMemory: !exists(json, 'maxMemory') ? undefined : json['maxMemory'],
    minMemory: !exists(json, 'minMemory') ? undefined : json['minMemory'],
    iconURL: !exists(json, 'iconURL') ? undefined : json['iconURL'],
    createdAt: !exists(json, 'createdAt')
      ? undefined
      : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt')
      ? undefined
      : new Date(json['updatedAt']),
    prettyName: !exists(json, 'prettyName') ? undefined : json['prettyName']
  }
}

export function ChorusAppToJSON(value?: ChorusApp | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    tenantId: value.tenantId,
    userId: value.userId,
    name: value.name,
    description: value.description,
    status: value.status,
    dockerImageRegistry: value.dockerImageRegistry,
    dockerImageName: value.dockerImageName,
    dockerImageTag: value.dockerImageTag,
    shmSize: value.shmSize,
    kioskConfigURL: value.kioskConfigURL,
    maxCPU: value.maxCPU,
    minCPU: value.minCPU,
    maxMemory: value.maxMemory,
    minMemory: value.minMemory,
    iconURL: value.iconURL,
    createdAt:
      value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt:
      value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
    prettyName: value.prettyName
  }
}
