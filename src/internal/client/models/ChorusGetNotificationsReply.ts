/* tslint:disable */
/* eslint-disable */
/**
 * CHORUS backend API
 * CHORUS backend API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ChorusNotification } from './ChorusNotification'
import {
  ChorusNotificationFromJSON,
  ChorusNotificationFromJSONTyped,
  ChorusNotificationToJSON
} from './ChorusNotification'

/**
 *
 * @export
 * @interface ChorusGetNotificationsReply
 */
export interface ChorusGetNotificationsReply {
  /**
   *
   * @type {Array<ChorusNotification>}
   * @memberof ChorusGetNotificationsReply
   */
  result?: Array<ChorusNotification>
  /**
   *
   * @type {number}
   * @memberof ChorusGetNotificationsReply
   */
  totalItems?: number
}

/**
 * Check if a given object implements the ChorusGetNotificationsReply interface.
 */
export function instanceOfChorusGetNotificationsReply(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ChorusGetNotificationsReplyFromJSON(
  json: any
): ChorusGetNotificationsReply {
  return ChorusGetNotificationsReplyFromJSONTyped(json, false)
}

export function ChorusGetNotificationsReplyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ChorusGetNotificationsReply {
  if (json === undefined || json === null) {
    return json
  }
  return {
    result: !exists(json, 'result')
      ? undefined
      : (json['result'] as Array<any>).map(ChorusNotificationFromJSON),
    totalItems: !exists(json, 'totalItems') ? undefined : json['totalItems']
  }
}

export function ChorusGetNotificationsReplyToJSON(
  value?: ChorusGetNotificationsReply | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    result:
      value.result === undefined
        ? undefined
        : (value.result as Array<any>).map(ChorusNotificationToJSON),
    totalItems: value.totalItems
  }
}
